<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[iris.dew]]></title><description><![CDATA[Blog posted about Web Frontend]]></description><link>https://irisdew.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Sat, 14 Aug 2021 13:19:22 GMT</lastBuildDate><item><title><![CDATA[이벤트 루프]]></title><description><![CDATA[자바스크립트 엔진 자바스크립트 코드를 해석하고 실행하는 인터프리터 ⚙ Webkit, V…]]></description><link>https://irisdew.github.io/development/이벤트-루프/</link><guid isPermaLink="false">https://irisdew.github.io/development/이벤트-루프/</guid><pubDate>Fri, 13 Aug 2021 16:09:13 GMT</pubDate><content:encoded>&lt;h2 id=&quot;자바스크립트-엔진&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%97%94%EC%A7%84&quot; aria-label=&quot;자바스크립트 엔진 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;자바스크립트 엔진&lt;/h2&gt;
&lt;p&gt;자바스크립트 코드를 해석하고 실행하는 인터프리터&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;⚙ Webkit, V8…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;자바스크립트 엔진은 크게 &lt;code class=&quot;language-text&quot;&gt;힙 + 호출스택 (Call Stack)&lt;/code&gt; 으로 구분된다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;힙 Heap&lt;/code&gt;은 메모리 할당이 일어나는 부분
(변수, 객체 등이 저장되는 일종의 창고)
&lt;br/&gt; &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;호출 스택 Call Stack&lt;/code&gt;은 함수가 &lt;strong&gt;호출되는 순서대로 쌓이는 스택&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;함수 실행 시 호출 스택에 해당 함수를 집어 넣음&lt;/li&gt;
&lt;li&gt;함수 return 시(함수의 실행이 끝나면) 호출 스택의 맨 위에 있는 해당 함수를 끄집어냄&lt;/li&gt;
&lt;li&gt;호출 스택이 빈다 = 실행할 함수가 남아있지 않다&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;🤔 사실 정확히 말하면 호출 스택에 쌓이는 건 &lt;br/&gt; 함수가 아니라 &lt;strong&gt;함수의 실행 컨텍스트&lt;/strong&gt;가 쌓이는 것!
&lt;br/&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;함수의 실행 컨텍스트(Execution Context)&lt;/strong&gt; &lt;br /&gt;
자바스크립트 엔진이 함수를 실행시키기 위해 가지고 있어야하는 여러가지 정보들
&lt;em&gt;(변수나 함수의 선언, 스코프, this … 같은 정보들을 물리적인 객체 형태로 보관하고 있다)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt; 
&lt;ul&gt;
&lt;li&gt;스크립트가 &lt;strong&gt;시작&lt;/strong&gt;하면 &lt;strong&gt;전역 문맥(Global Context)&lt;/strong&gt;이 호출스택에 추가된다
스크립트가 끝날 때 전역 문맥이 호출스택에서 사라지면서 끝!&lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;
&lt;h2 id=&quot;자바스크립트는-single-thread-언어다&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%8A%94-single-thread-%EC%96%B8%EC%96%B4%EB%8B%A4&quot; aria-label=&quot;자바스크립트는 single thread 언어다 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;자바스크립트는 Single Thread 언어다&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;그래서 자바스크립트 엔진은…&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;= 동시에 하나의 일만 처리할 수 있다 &lt;br/&gt;
= 호출 스택을 하나만 사용한다&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;👀 그럼 비동기 처리나 동시성에 대한 처리는 어디서 어떻게 하는 걸까?&lt;/p&gt;
&lt;/blockquote&gt;
 &lt;br /&gt;
&lt;h2 id=&quot;브라우저의-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;브라우저의 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;브라우저의 구조&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;브라우저&lt;/strong&gt;는 자바스크립트 엔진 말고도 &lt;br/&gt;&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;Web API, 이벤트루프, 콜백, 큐 ...&lt;/code&gt; 등을 가지고 있다&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 동시성을 지원하기 위해 자바스크립트 엔진을 구동하는 환경인 &lt;strong&gt;브라우저&lt;/strong&gt;가 &lt;strong&gt;비동기 처리&lt;/strong&gt;를 담당한다&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/irisdew/post/d0cd3838-845e-4c3a-aef6-8fe7815091a6/image.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;setTimeout, DOM 매서드, HTTP 요청&lt;/code&gt; 등은 &lt;br/&gt;  모두 자바스크립트 엔진 밖에 있는 &lt;code class=&quot;language-text&quot;&gt;Web API&lt;/code&gt;에서 제공하는 메서드
&lt;br/&gt; &lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Web API&lt;/code&gt; 매서드들은 모두 &lt;strong&gt;비동기&lt;/strong&gt; 메서드들이기 때문에 &lt;br/&gt;
작동을 마치고 &lt;code class=&quot;language-text&quot;&gt;콜백함수&lt;/code&gt;를 &lt;code class=&quot;language-text&quot;&gt;콜백 큐&lt;/code&gt;에 집어 넣음
&lt;br/&gt; &lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;콜백 큐 Callback Queue&lt;/code&gt;에 비동기 처리가 끝난 후 실행 되어야 할 &lt;br/&gt; &lt;code class=&quot;language-text&quot;&gt;콜백함수&lt;/code&gt;들이 차례로 할당되고, 실행을 대기하게 됨&lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;
&lt;h2 id=&quot;이벤트-루프가-하는-일&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A3%A8%ED%94%84%EA%B0%80-%ED%95%98%EB%8A%94-%EC%9D%BC&quot; aria-label=&quot;이벤트 루프가 하는 일 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;이벤트 루프가 하는 일&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;호출 스택 Call Stack&lt;/code&gt;과 &lt;code class=&quot;language-text&quot;&gt;콜백 큐 Callback Queue&lt;/code&gt;를 계속 주시하고 있다가
&lt;br/&gt; &lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;호출 스택&lt;/code&gt;이 &lt;strong&gt;비어있으면&lt;/strong&gt;, &lt;code class=&quot;language-text&quot;&gt;콜백 큐&lt;/code&gt;에 먼저 들어온 순서대로 &lt;code class=&quot;language-text&quot;&gt;콜백 큐&lt;/code&gt;에 있는 &lt;code class=&quot;language-text&quot;&gt;콜백 함수&lt;/code&gt;들을 &lt;code class=&quot;language-text&quot;&gt;호출 스택&lt;/code&gt;으로 집어 넣는다.
&lt;br/&gt; &lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;호출 스택&lt;/code&gt;에서 &lt;code class=&quot;language-text&quot;&gt;콜백 함수&lt;/code&gt;가 실행되고 사라진다.
&lt;br/&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;✨자바스크립트의 &lt;strong&gt;동시성&lt;/strong&gt;을 지원하는 것이 바로 &lt;strong&gt;이벤트 루프&lt;/strong&gt;라고 할 수 있다!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3 id=&quot;reference&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#reference&quot; aria-label=&quot;reference permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;우아한테코톡 - 이벤트 루프 &lt;a href=&quot;https://youtu.be/wcxWlyps4Vg&quot;&gt;https://youtu.be/wcxWlyps4Vg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://towardsdev.com/event-loop-in-javascript-672c07618dc9?gi=b276e835f287&quot;&gt;https://towardsdev.com/event-loop-in-javascript-672c07618dc9?gi=b276e835f287&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://poiemaweb.com/js-event&quot;&gt;https://poiemaweb.com/js-event&lt;/a&gt;&lt;/p&gt;
&lt;br /&gt;   
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[브라우저 동작 원리]]></title><description><![CDATA[브라우저란? 월드와이드웹(WWW)에서 정보를 검색, 표현, 탐색하기 위한 소프트웨어 브라우저의 핵심 기능은 사용자가 선택한 자원을 서버에 요청하고 브라우저에 표시하는 것 💡 자원 Resource…]]></description><link>https://irisdew.github.io/development/브라우저-동작-원리/</link><guid isPermaLink="false">https://irisdew.github.io/development/브라우저-동작-원리/</guid><pubDate>Fri, 13 Aug 2021 14:08:55 GMT</pubDate><content:encoded>&lt;h2 id=&quot;브라우저란&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EB%9E%80&quot; aria-label=&quot;브라우저란 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;브라우저란?&lt;/h2&gt;
&lt;p&gt;월드와이드웹(WWW)에서 정보를 검색, 표현, 탐색하기 위한 소프트웨어&lt;/p&gt;
&lt;p&gt;브라우저의 핵심 기능은 사용자가 선택한 &lt;strong&gt;자원&lt;/strong&gt;을 서버에 요청하고 브라우저에 표시하는 것&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 &lt;strong&gt;자원 Resource&lt;/strong&gt; &lt;br /&gt;
사용자가 원하는 웹페이지를 구성하기 위해 필요한 파일들
(HTML, CSS, JS, 이미지 …)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;브라우저는 HTML과 CSS 명세 &lt;em&gt;(웹 표준화 기구인 W3C(World Wide Web Consortium)에서 정해진 명세)&lt;/em&gt; 에 따라 HTML 파일을 해석해서 표시&lt;/p&gt;
&lt;br /&gt;
&lt;h2 id=&quot;브라우저-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;브라우저 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;브라우저 구조&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/76525368/129310978-457fe83d-5648-4219-871e-ddf38b9d3f39.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UI&lt;/strong&gt; User Interface 사용자 인터페이스
주소 표시 줄 / 이전 버튼과 다음 버튼 / 북마크 / 새로 고침, 정지, 홈 버튼 등…&lt;/p&gt;
&lt;p&gt;요청한 페이지를 보여주는 창을 제외하고 사용자와 상호작용하는 나머지 부분&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Broweser Engine&lt;/strong&gt; 브라우저 엔진
사용자 인터페이스와 렌더링 엔진을 연결
브라우저 소프트웨어를 동작시켜주는 핵심 엔진&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Rendering Engine&lt;/strong&gt; 렌더링 엔진
요청한 콘텐츠를 브라우저 화면에 표시
HTML과 CSS를 파싱하여 웹페이지를 화면에 표시&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; ⚙ &lt;strong&gt;Rendering Engine의 목표&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;HTML, CSS, JS, 이미지 등 웹페이지에 포함된 모든 요소들을 &lt;strong&gt;화면에 보여준다&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;업데이트가 필요할 때, &lt;strong&gt;효율적&lt;/strong&gt;으로 렌더링을 할 수 있도록 &lt;strong&gt;자료구조를 생성&lt;/strong&gt;한다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자 동작으로 인해 입력이 발생하거나, 스크롤이 생기거나, 애니메이션이 동작할 때&lt;/li&gt;
&lt;li&gt;비동기 요청으로 인한 데이터 로딩이 발생했을 때&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
 &lt;br /&gt;
&lt;blockquote&gt;
&lt;p&gt;🧭 &lt;strong&gt;브라우저마다 다른 렌더링 엔진&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Webkit (Safari)&lt;/li&gt;
&lt;li&gt;Gacko (Firefox)&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blink (Chrome) &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;예전에는 Webkit을 사용하다가 2013년부터 Webkit에서 갈라져나온 Blink를 사용&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Networking&lt;/strong&gt; 네트워크&lt;/p&gt;
&lt;p&gt;HTTP 요청과 같은 네트워크 호출에 사용, 각종 네트워크 요청을 수행, 서버와 통신&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JavaScript Interpreter&lt;/strong&gt; 자바스크립트 해석기&lt;/p&gt;
&lt;p&gt;자바스크립트 코드를 실행하는 인터프리터&lt;/p&gt;
&lt;p&gt;Chrome의 경우 V8을 사용&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 💡 &lt;strong&gt;JavaScript는 렌더링 엔진이 아닌 JavaScript Interpreter가 처리한다&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML 파서는 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;script&gt;&lt;/code&gt;태그를 만나면 자바스크립트 코드를 실행하기 위해 DOM 생성 프로세스를 중지하고 자바스크립트 엔진으로 제어 권한을 넘긴다&lt;/li&gt;
&lt;li&gt;제어 권한을 넘겨받은 자바스크립트 엔진은 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;script&gt;&lt;/code&gt;태그 내의 자바스크립트 코드 or &lt;code class=&quot;language-text&quot;&gt;&amp;lt;script&gt;&lt;/code&gt;태그의 src에 정의된 js 파일을 로드하고 파싱하여 실행한다&lt;/li&gt;
&lt;li&gt;자바스크립트의 실행이 완료되면 다시 HTML 파서로 제어 권한을 넘겨 브라우저가 중지했던 시점부터 DOM 생성을 재개한다 &lt;br/&gt;
➡ 그러므로 HTML 요소를 다 처리한 이후, 자바스크립트를 처리할 수 있도록  &lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;body&gt;&lt;/code&gt;태그 하단&lt;/strong&gt;에 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;script&gt;&lt;/code&gt;태그를 위치시키는 것이 좋다&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;br /&gt;
&lt;blockquote&gt;
&lt;p&gt;🔧 JavaScript 코드는 &lt;strong&gt;body 태그 하단&lt;/strong&gt;에 위치하면 script 로딩 지연으로 인해 동기적으로 동작하는 브라우저 동작에 blocking이 발생하지 않아 페이지 로딩 시간이 단축된다. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;💄 CSS 코드는 &lt;strong&gt;head 태그 안&lt;/strong&gt;에 위치하여 렌더링 처리 시에 브라우저가 더 빨리 참고할 수 있게 하는 것이 좋다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;UI Backend&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;UI를 처리할 수 있는 백엔드 영역&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Persistence&lt;/strong&gt; 자료 저장소&lt;/p&gt;
&lt;p&gt;자료를 저장하는 계층&lt;/p&gt;
&lt;p&gt;localStorage나 Cookie와 같이 보조 기억장치에 데이터를 저장하는 파트&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;
&lt;h2 id=&quot;브라우저-렌더링-과정&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%A0%8C%EB%8D%94%EB%A7%81-%EA%B3%BC%EC%A0%95&quot; aria-label=&quot;브라우저 렌더링 과정 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;브라우저 렌더링 과정&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/76525368/129313001-50073261-7b79-4219-84d4-41ba9301fa51.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DOM tree 생성&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;브라우저의 렌저링 엔진이 HTML 코드를 읽고 파싱하여 DOM tree를 생성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;HTML 코드&lt;/code&gt;를 어휘분석을 통해 HTML5 표준에 지정된 고유한 &lt;code class=&quot;language-text&quot;&gt;토큰&lt;/code&gt;으로 변환&lt;/li&gt;
&lt;li&gt;렉싱 과정을 통해 &lt;code class=&quot;language-text&quot;&gt;토큰&lt;/code&gt;을 해당 속성과 규칙을 정의하는 &lt;code class=&quot;language-text&quot;&gt;Node&lt;/code&gt;로 변환&lt;/li&gt;
&lt;li&gt;각 &lt;code class=&quot;language-text&quot;&gt;Node&lt;/code&gt;가 서로 연관성을 가질 수 있도록 &lt;code class=&quot;language-text&quot;&gt;DOM tree&lt;/code&gt;를 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Render tree 생성&lt;/strong&gt;
화면에 표시되어야 할 모든 Node의 컨텐츠, 스타일 정보를 포함하는 tree&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS 파일이나 HTML에 inline으로 작성된 스타일 코드를 파싱하여 &lt;code class=&quot;language-text&quot;&gt;CSSOM&lt;/code&gt;을 구성&lt;/li&gt;
&lt;li&gt;document부터 각 Node를 순회하면서 각각에 맞는 CSSOM을 찾아 규칙을 적용&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;DOM 트리&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;CSSOM&lt;/code&gt;을 결합하여 &lt;code class=&quot;language-text&quot;&gt;Render tree&lt;/code&gt; 생성&lt;/li&gt;
&lt;li&gt;meta 태그나 display:none 속성을 가진 요소 같은 것들은 렌더와 무관하기 때문에 Render tree에 포함되지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Layout(reflow)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;뷰포트 내에 생성된 render tree의 각 노드들의 정확한 위치와 크기를 결정&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;%, em과 같은 상대 단위를 사용했을 때 뷰포트에 맞춰 px로 변환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Paint (repaint)&lt;/strong&gt;
마지막으로 구성한 레이아웃을 실제로 화면에 픽셀로 그리는 과정&lt;/li&gt;
&lt;/ol&gt;
&lt;br /&gt;
&lt;h2 id=&quot;브라우저가-화면을-다시-그리는-경우&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EA%B0%80-%ED%99%94%EB%A9%B4%EC%9D%84-%EB%8B%A4%EC%8B%9C-%EA%B7%B8%EB%A6%AC%EB%8A%94-%EA%B2%BD%EC%9A%B0&quot; aria-label=&quot;브라우저가 화면을 다시 그리는 경우 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;브라우저가 화면을 다시 그리는 경우&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/76525368/129318981-f5171657-4e4f-4511-bf2a-34c7eb6adc52.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;다시 Layout이 발생&lt;/strong&gt;
주로 &lt;strong&gt;요소의 크기&lt;/strong&gt;나 &lt;strong&gt;위치&lt;/strong&gt;가 바뀔 때, 혹은 &lt;strong&gt;브라우저 창의 크기&lt;/strong&gt;가 바뀌었을때 다시 발생&lt;/p&gt;
&lt;p&gt;레이아웃 수치를 다시 계산해서 배치를 해야하기 때문에,  레이아웃 과정이 다시 발생하고 페인트와 레이어 합성 과정까지 다시 거쳐야함&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Paint부터 다시 발생하는 경우&lt;/strong&gt;
주로 배경 이미지나 텍스트 색상, 그림자 등 &lt;strong&gt;레이아웃의 수치를 변화시키지 않는 스타일의 변경&lt;/strong&gt;이 일어났을 때 발생&lt;/p&gt;
&lt;p&gt;레이아웃 과정이 다시 발생하지 않기 때문에 성능상으로 좀 더 이점&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;레이어의 합성만 다시 발생하는 경우&lt;/strong&gt;
레이어의 합성(Composite)만 발생하기 때문에 성능적으로 가장 큰 이점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;레이어는 포토샵의 레이어와 비슷하게 페인팅할 영역을 나누어놓은 것을 의미&lt;/li&gt;
&lt;li&gt;Chrome의 경우에는 레이아웃 과정 이후에 정해진 기준이나 필요에 의해서 브라우저가 레이어를 생성 &lt;/li&gt;
&lt;li&gt;렌더링 엔진이 각 레이어를 프린팅 과정에서 각각 그려준 다음에 하나의 비트맵으로 합성해서 페이지를 완성&lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;👀 &lt;a href=&quot;https://csstriggers.com/&quot;&gt;https://csstriggers.com/&lt;/a&gt; 에서 &lt;br/&gt; 브라우저, CSS요소에 따라 3가지 중 어떤 경우가 발생하는지 알 수 있음!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br /&gt;
&lt;hr/&gt;
&lt;h3 id=&quot;reference&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#reference&quot; aria-label=&quot;reference permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://poiemaweb.com/js-browser&quot;&gt;https://poiemaweb.com/js-browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;우아한테코톡 - 브라우저 렌더링 &lt;a href=&quot;https://youtu.be/sJ14cWjrNis&quot;&gt;https://youtu.be/sJ14cWjrNis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;우아한테코톡 - Virtual DOM &lt;a href=&quot;https://youtu.be/PN_WmsgbQCo&quot;&gt;https://youtu.be/PN_WmsgbQCo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;부스트코스 웹 풀스택 browser의 동작 &lt;a href=&quot;https://www.boostcourse.org/web316/lecture/254256&quot;&gt;https://www.boostcourse.org/web316/lecture/254256&lt;/a&gt;&lt;/p&gt;
&lt;br /&gt;   
&lt;br /&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[React로 사고하기]]></title><description><![CDATA[리액트 공식문서 - React로 사고하기를 읽고 정리한 글입니다. 단일 책임 원칙 single responsibility principle 하나의 컴포넌트는 한가지 일을 하는게 이상적이라는 원칙 1 컴포넌트 1 일 1 함수 1 일 1 파일…]]></description><link>https://irisdew.github.io/react/react로-사고하기/</link><guid isPermaLink="false">https://irisdew.github.io/react/react로-사고하기/</guid><pubDate>Mon, 09 Aug 2021 23:08:25 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;&lt;strong&gt;리액트 공식문서 - &lt;a href=&quot;https://ko.reactjs.org/docs/thinking-in-react.html&quot;&gt;React로 사고하기&lt;/a&gt;를 읽고 정리한 글입니다.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&quot;단일-책임-원칙&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%8B%A8%EC%9D%BC-%EC%B1%85%EC%9E%84-%EC%9B%90%EC%B9%99&quot; aria-label=&quot;단일 책임 원칙 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;단일 책임 원칙&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;single responsibility principle&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;하나의 컴포넌트는 한가지 일을 하는게 이상적이라는 원칙&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 컴포넌트 1 일&lt;/li&gt;
&lt;li&gt;1 함수 1 일&lt;/li&gt;
&lt;li&gt;1 파일 1 일&lt;/li&gt;
&lt;li&gt;코드가 150줄이 넘어간다면 분명히 줄일 수 있다. 하위 컴포넌트로 분리하자. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;정적-ui를-만든-후-컴포넌트-계층-구조로-나누기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A0%95%EC%A0%81-ui%EB%A5%BC-%EB%A7%8C%EB%93%A0-%ED%9B%84-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0%EB%A1%9C-%EB%82%98%EB%88%84%EA%B8%B0&quot; aria-label=&quot;정적 ui를 만든 후 컴포넌트 계층 구조로 나누기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;정적 UI를 만든 후 컴포넌트 계층 구조로 나누기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;top-down&lt;/li&gt;
&lt;li&gt;bottom-up&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;state-추가하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#state-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0&quot; aria-label=&quot;state 추가하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;State 추가하기&lt;/h3&gt;
&lt;p&gt; state 추가의 핵심은 &lt;strong&gt;중복배제원칙&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;애플리케이션이 필요로 하는 가장 최소한의 state를 찾고 이를 통해 나머지 모든 것들이 필요에 따라 그때그떄 계산되도록 만드세요.&lt;/li&gt;
&lt;li&gt;예를 들어 TODO 리스트를 만든다고 하면, TODO 아이템을 저장하는 배열만 유지하고 TODO 아이템의 개수를 표현하는 state를 별도로 만들지 마세요.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;어떤 컴포넌트가 state를 소유하고 변경할지, state의 위치 정해주기&lt;/p&gt;
&lt;h3 id=&quot;역방향-데이터-흐름-추가하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%97%AD%EB%B0%A9%ED%96%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%9D%90%EB%A6%84-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0&quot; aria-label=&quot;역방향 데이터 흐름 추가하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;역방향 데이터 흐름 추가하기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;예를들어 우리는 사용자가 폼을 변경할 떄마다 사용자의 입력을 반영할 수 있도록 state를 업데이트하기를 원합니다.
컴포넌트에 콜백을 넘겨서 state가 업데이트 되어야 할 때마다 호출되도록 할 것입니다. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;react-사고방식&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#react-%EC%82%AC%EA%B3%A0%EB%B0%A9%EC%8B%9D&quot; aria-label=&quot;react 사고방식 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React 사고방식&lt;/h3&gt;
&lt;p&gt;코드를 쓸 일보다 읽을 일이 더 많다는 사실을 기억하세요.
&lt;strong&gt;모듈화&lt;/strong&gt;되고 &lt;strong&gt;명시적&lt;/strong&gt;인 코드는 읽을 때 덜 어렵습니다.
컴포넌트를 적절히 만들면 코드 재사용성을 통해 코드 라인이 줄어들기 시작할 것입니다 :)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[자란다 기업과제 회고]]></title><description><![CDATA[배포 주소 🔗 자란다 - Team RE4CT Github  미팅로그 어떻게 협업을 했는가? 7인 팀프로젝트였고, 만들어야할 기능은 크게 로그인/회원가입/관리자 페이지였다. 그래서 로그인팀/회원가입팀/관리자팀으로 2~…]]></description><link>https://irisdew.github.io/pre-onboarding/자란다-기업과제-회고/</link><guid isPermaLink="false">https://irisdew.github.io/pre-onboarding/자란다-기업과제-회고/</guid><pubDate>Sat, 07 Aug 2021 23:08:03 GMT</pubDate><content:encoded>&lt;h3 id=&quot;배포-주소&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B0%B0%ED%8F%AC-%EC%A3%BC%EC%86%8C&quot; aria-label=&quot;배포 주소 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;배포 주소&lt;/h3&gt;
&lt;h5 id=&quot;-자란다---team-re4ct&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#-%EC%9E%90%EB%9E%80%EB%8B%A4---team-re4ct&quot; aria-label=&quot; 자란다   team re4ct permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;🔗 &lt;a href=&quot;https://epic-jepsen-a6fdee.netlify.app/&quot;&gt;자란다 - Team RE4CT&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hami-dev/wanted-jaranda-project&quot;&gt;Github&lt;/a&gt;  &lt;a href=&quot;https://www.notion.so/Team-meeting-ce0afb54e99946088c3b25ac4f5d0b68&quot;&gt;미팅로그&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;어떻게-협업을-했는가&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%98%91%EC%97%85%EC%9D%84-%ED%96%88%EB%8A%94%EA%B0%80&quot; aria-label=&quot;어떻게 협업을 했는가 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;어떻게 협업을 했는가?&lt;/h2&gt;
&lt;p&gt;7인 팀프로젝트였고, 만들어야할 기능은 크게 로그인/회원가입/관리자 페이지였다.&lt;/p&gt;
&lt;p&gt;그래서 로그인팀/회원가입팀/관리자팀으로 2~3명씩 팀을 나눴고, &lt;/p&gt;
&lt;p&gt;나는 그 중 &lt;strong&gt;회원가입&lt;/strong&gt;팀에 들어가 혜린님과 함께 작업한 후 작업 내역을 전체에 합쳤다!&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;팀&lt;/code&gt;으로 프로그래밍 하는 경험, &lt;code class=&quot;language-text&quot;&gt;페어&lt;/code&gt;로 프로그래밍 하는 경험을 모두 해볼 수 있었다.&lt;/p&gt;
&lt;h4 id=&quot;이번-협업에서-배운점-좋았던-점-&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9D%B4%EB%B2%88-%ED%98%91%EC%97%85%EC%97%90%EC%84%9C-%EB%B0%B0%EC%9A%B4%EC%A0%90-%EC%A2%8B%EC%95%98%EB%8D%98-%EC%A0%90-&quot; aria-label=&quot;이번 협업에서 배운점 좋았던 점  permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;이번 협업에서 배운점, 좋았던 점 👍&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Rebase와 Squash로 깔끔해진 커밋로그&lt;/li&gt;
&lt;li&gt;Utils, Constants, GlobalStyles 사용&lt;/li&gt;
&lt;li&gt;다른 사람의 코드를 읽고 배우기&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;완벽한-회원가입-form을-만들기-위한-고군분투-🧐&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%99%84%EB%B2%BD%ED%95%9C-%ED%9A%8C%EC%9B%90%EA%B0%80%EC%9E%85-form%EC%9D%84-%EB%A7%8C%EB%93%A4%EA%B8%B0-%EC%9C%84%ED%95%9C-%EA%B3%A0%EA%B5%B0%EB%B6%84%ED%88%AC-%F0%9F%A7%90&quot; aria-label=&quot;완벽한 회원가입 form을 만들기 위한 고군분투 🧐 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;완벽한 회원가입 form을 만들기 위한 고군분투 🧐&lt;/h2&gt;
&lt;h3 id=&quot;useinput--custom-hook-사용하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#useinput--custom-hook-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&quot; aria-label=&quot;useinput  custom hook 사용하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;useInput : Custom Hook 사용하기&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; useState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; useRef &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;react&apos;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;useInput&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;initialValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setValue&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;initialValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;onChange&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;target&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; inputRef &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useRef&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onChange&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputRef&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이전에 강의에서도 본 적이 있고, 여러 블로그에도 올라와 있는 Custom Hook이다.&lt;/p&gt;
&lt;p&gt;리액트에서 Form 관련 라이브러리를 사용하지 않고 Form을 구현하려면,
input창 하나마다 각각 state, setState가 필요하고, onChange될 때마다 state를 변경해주는 onChange 함수 로직이 필요하다.&lt;/p&gt;
&lt;p&gt;그리고 이번 과제에서는
잘못된 값을 입력한 input창으로 focus를 자동으로 옮겨주는 기능을 구현하고자 했기 때문에
모든 input창에 ref도 필요했다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onChangeEmail&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputEmail&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;pwd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onChangePwd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputPwd&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputName&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setAge&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputAge&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setPost&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputPostCode&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;addr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setAddr&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;extraAddr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setExtraAddr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; onChangeExtraAddr&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;cardNum&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setCardNum&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputCard&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;반복적으로 필요한 것들을 묶어 useInput으로 만들어 잘 활용했다!&lt;/p&gt;
&lt;h3 id=&quot;daum-우편번호-api-연동&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#daum-%EC%9A%B0%ED%8E%B8%EB%B2%88%ED%98%B8-api-%EC%97%B0%EB%8F%99&quot; aria-label=&quot;daum 우편번호 api 연동 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Daum 우편번호 API 연동&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://postcode.map.daum.net/guide&quot;&gt;다음 우편번호 API&lt;/a&gt;는 사용하기 매우 편리했다. &lt;/p&gt;
&lt;p&gt;key를 발급받을 필요도 없고, CDN link 한 줄만 추가해주면 바로 사용이 가능하다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token script&quot;&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;npm에 &lt;a href=&quot;https://www.npmjs.com/package/react-daum-postcode&quot;&gt;react-daum-postcode&lt;/a&gt;라고 더욱더 편리하게 사용할 수 있는 패키지가 있었으나..
그냥 곧바로 API를 가져와 연동해봤다. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; daum &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;daum &lt;span class=&quot;token comment&quot;&gt;// 최상단에 daum을 선언해주어야 한다.&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setDaumAddr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; setPost&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setAddr&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setExtraAddr &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  daum&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;postcode&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;daum&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Postcode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token function-variable function&quot;&gt;oncomplete&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;token comment&quot;&gt;// 원하는 방식을 API 문서에서 예시코드를 가져와 사용하면 된다.&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Daum 주소 팝업창 관련 에러가 발생한 경우 &lt;a href=&quot;https://github.com/daumPostcode/QnA&quot;&gt;여기&lt;/a&gt;에서 FAQ를 읽어보거나 issue 탭에서 다른 사용자들이 겪었던 에러를 검색해보면 금방 해결할 수 있다!&lt;/p&gt;
&lt;p&gt;주소를 선택해도 팝업창이 닫히지 않는 에러가 있었는데,
“주소 검색” 버튼의 type이 “submit” 상태여서
검색을 눌렀을 때 팝업 아래의 부모 페이지가 새로고침 되어,
부모 페이지가 팝업창을 제어할 수 있는 권한을 잃어버리는 문제였다…!  &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/daumPostcode/QnA/issues/596&quot;&gt;https://github.com/daumPostcode/QnA/issues/596&lt;/a&gt; 를 보고 해결할 수 있었다.&lt;/p&gt;
&lt;p&gt;내가 겪은 문제는 나만 겪는 문제가 아니라 누군가 이미 겪었던, 앞으로 누군가 겪을 문제라는 것!&lt;/p&gt;
&lt;p&gt;개발이 재밌는 이유 중 하나다. 🎮&lt;/p&gt;
&lt;h3 id=&quot;비밀번호-유효성-검사-ui&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8-%EC%9C%A0%ED%9A%A8%EC%84%B1-%EA%B2%80%EC%82%AC-ui&quot; aria-label=&quot;비밀번호 유효성 검사 ui permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;비밀번호 유효성 검사 UI&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/76525368/128725685-4f16690f-0d49-4e0d-b49a-e5ed70fdfb4a.png&quot; alt=&quot;Untitled&quot;&gt;&lt;/p&gt;
&lt;p&gt;자란다 홈페이지를 많이 참고하면서 회원가입을 구현했는데, &lt;/p&gt;
&lt;p&gt;자란다 홈페이지의 회원가입에서 눈에 띈 부분은
비밀번호 유효성 검사에 대해 사용자가 인지하기 편하게
비밀번호 입력폼 하단에 체크체크 할 수 있는 UI가 있다는 점이었다!&lt;/p&gt;
&lt;p&gt;마음에 드는 UI였고 따라해보고 싶어 구현해보았다.&lt;/p&gt;
&lt;p&gt;사용자에게 비밀번호 규칙을 직관적으로 알려주면서도,
유효성 검사도 할 수 있는 좋은 UI라는 생각이 들어
재밌게 만들어 볼 수 있었다!&lt;/p&gt;
&lt;h3 id=&quot;정규식을-사용한-유효성-검사&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A0%95%EA%B7%9C%EC%8B%9D%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EC%9C%A0%ED%9A%A8%EC%84%B1-%EA%B2%80%EC%82%AC&quot; aria-label=&quot;정규식을 사용한 유효성 검사 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;정규식을 사용한 유효성 검사&lt;/h3&gt;
&lt;p&gt;유효한 값을 입력했는지, 정규식을 활용하여 검사를 했다.&lt;/p&gt;
&lt;p&gt;편리한 정규식! good!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; validation &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;isName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reg &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;^[가-힣]{2,6}$&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; reg&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;isAge&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; reg &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;^[1-9]?[0-9]{1}$|^100$&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; reg&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 

&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;useref로-focus-제어&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#useref%EB%A1%9C-focus-%EC%A0%9C%EC%96%B4&quot; aria-label=&quot;useref로 focus 제어 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;useRef로 focus 제어&lt;/h3&gt;
&lt;p&gt;useRef는 사용할 일이 잘 없는 Hook이라고 생각했는데&lt;/p&gt;
&lt;p&gt;focus를 자동으로 이동시키도록 해주기 위해서는 HTML 요소에 접근이 필요했다. &lt;/p&gt;
&lt;p&gt;focus가 이동시켜지길 원하는 input 태그에 ref 인자를 추가해주고&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;inputRef&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;current&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;위와 같이 자동으로 focus를 이동시켜 줄 수 있었다. &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;내가-만들었지만-아쉬웠던-코드-&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%82%B4%EA%B0%80-%EB%A7%8C%EB%93%A4%EC%97%88%EC%A7%80%EB%A7%8C-%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%BD%94%EB%93%9C-&quot; aria-label=&quot;내가 만들었지만 아쉬웠던 코드  permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;내가 만들었지만 아쉬웠던 코드 🤔&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;onSubmitHandler&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isValidatedUserInfo&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	      userListStorage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;usersInfo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; newUserInfo&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	      isValidatedUserInfo &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;toast&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;toastMsg&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SIGNUP_SUCCESSED&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	      &lt;span class=&quot;token function&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	        history&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/login&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
	      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;아쉬운 점 : 비동기 처리에 자신이 없어서 일단 setTimeout을 사용했다&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setTimeout은 시간을 0.00001초만 주어도 비동기함수로 처리된다&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;⇒  &lt;em&gt;async/await로 해보면 좋지 않았을까?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;과제를-마치며&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B3%BC%EC%A0%9C%EB%A5%BC-%EB%A7%88%EC%B9%98%EB%A9%B0&quot; aria-label=&quot;과제를 마치며 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;과제를 마치며…&lt;/h2&gt;
&lt;p&gt;원래 정해진 기한이 있는 프로젝트를 끝내고 나면
만족감보다는 뭔가 더 잘할 수 있었겠다는 아쉬움이 훨씬 크게 느껴졌었다.&lt;/p&gt;
&lt;p&gt;그런데 이번 프로젝트는 팀원들의 합도 잘 맞았고! 결과물이 정말 마음에 들었다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;디자인&lt;/strong&gt; (&lt;a href=&quot;https://jaranda.kr/&quot;&gt;자란다 홈페이지&lt;/a&gt;를 clone) 에 신경을 썼고,
&lt;strong&gt;추가기능&lt;/strong&gt;(마이페이지 구현, 관리자 페이지의 섬세한 기능들! 등)을 구현했고,
&lt;strong&gt;더 나은 코드에 대한 고민&lt;/strong&gt;을 하면서 개발해서였던 것 같다. 만족스럽다 🥰&lt;/p&gt;</content:encoded></item><item><title><![CDATA[더 나은 리액트 프로젝트를 위해]]></title><description><![CDATA[…]]></description><link>https://irisdew.github.io/pre-onboarding/더-나은-리액트-프로젝트를-위해/</link><guid isPermaLink="false">https://irisdew.github.io/pre-onboarding/더-나은-리액트-프로젝트를-위해/</guid><pubDate>Thu, 29 Jul 2021 22:07:48 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;(작성중)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;프리온보딩 두번째 수업!
저번 과제에 대한 리뷰를 듣고 중요한 내용을 많이 배울 수 있었다. ✍&lt;/p&gt;
&lt;h3 id=&quot;주니어에게-필요한-능력&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%A3%BC%EB%8B%88%EC%96%B4%EC%97%90%EA%B2%8C-%ED%95%84%EC%9A%94%ED%95%9C-%EB%8A%A5%EB%A0%A5&quot; aria-label=&quot;주니어에게 필요한 능력 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;주니어에게 필요한 능력&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;남이 만들어놓은 걸 갖다 쓰는걸 잘해야한다 &lt;br/&gt; (다른 사람의 코드, 라이브러리)&lt;/li&gt;
&lt;li&gt;문서를 잘 읽어야한다&lt;/li&gt;
&lt;li&gt;이미 소스코드가 만들어져 있는 시점에 투입됨&lt;/li&gt;
&lt;li&gt;남의 코드를 읽고 분석을 잘하는 것 중요!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;cra-구조&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#cra-%EA%B5%AC%EC%A1%B0&quot; aria-label=&quot;cra 구조 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CRA 구조&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;하나의 구조만 고집하지 말기!&lt;/li&gt;
&lt;li&gt;다른 사람들의 코드, 국내 스타트업의 구조 살펴보기👀&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;css-with-react&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#css-with-react&quot; aria-label=&quot;css with react permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSS with React&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Styled component가 등장한 이유
: 전역스타일 오염 떄문! - styled component 안에 className을 쓰면 오염이 일어날 수 있음&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Styled component의 단점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;html 구조가 한눈에 잘 안보임 div인지 a인지…&lt;/li&gt;
&lt;li&gt;한 파일에 코드가 너무 많아짐. 이해하기가 어려움&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Sass module&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;commit-message&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#commit-message&quot; aria-label=&quot;commit message permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commit Message&lt;/h3&gt;
&lt;h3 id=&quot;페어-프로그래밍-tip&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%8E%98%EC%96%B4-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-tip&quot; aria-label=&quot;페어 프로그래밍 tip permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;페어 프로그래밍 Tip&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;둘의 실력차이가 필연적으로 있다&lt;/li&gt;
&lt;li&gt;말을 많이 꺼내기👄 &lt;br/&gt; 명확히 말할 수 있어야 아는 것인데 페어에게 설명하면서 &lt;br/&gt; 내가 아는 것/모르는 것을 알게된다&lt;/li&gt;
&lt;li&gt;모르면 까짓것 틀리면 됨! 상대방에게 감사함을 표시🙏 &lt;br/&gt; 궁금한건 바로 물어보면 가장 좋고! &lt;br/&gt;적어도 메모한 뒤 나중에 꼬옥 이해 못한 부분 찾아보기&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;html과-css의-중요성-잊지-말기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#html%EA%B3%BC-css%EC%9D%98-%EC%A4%91%EC%9A%94%EC%84%B1-%EC%9E%8A%EC%A7%80-%EB%A7%90%EA%B8%B0&quot; aria-label=&quot;html과 css의 중요성 잊지 말기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTML과 CSS의 중요성 잊지 말기!&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;div 남발해도 되지만, 굳이 필요없는 경우는 depth만 길어진다&lt;/li&gt;
&lt;li&gt;css는 경험이 중요하다.
백만가지 방법 존재하지만, 꼭꼭 공부해야함!
잘 작성해야 유지보수 가능&lt;/li&gt;
&lt;li&gt;property를 지웠을 때 동일하다면 쓸모없는 코드!&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;flex&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;default로 원래 세로배치인데
가로배치로 바꾸어준 혁명!&lt;/li&gt;
&lt;li&gt;그럼 세로배치를 하고 싶을 때는 flex를 굳이 쓸 필요가 있을까? NO&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; column&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(내가 저번 과제에 딱 이렇게 해서 뜨끔!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;여백 오사용 주의&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;height 유의해서 사용하기&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;자식의 크기가 부모의 크기를 결정한다&lt;/li&gt;
&lt;li&gt;내용 길이가 유동적인 경우! height를 주면 안된다.&lt;/li&gt;
&lt;li&gt;height가 아니라 여백으로 잡는게 일반적&lt;/li&gt;
&lt;li&gt;높이를 줘야하는 경우보다 주지 않아야 할 경우가 더 많다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;게으름이-좋은-코드를-만든다&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B2%8C%EC%9C%BC%EB%A6%84%EC%9D%B4-%EC%A2%8B%EC%9D%80-%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%A7%8C%EB%93%A0%EB%8B%A4&quot; aria-label=&quot;게으름이 좋은 코드를 만든다 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;게으름이 좋은 코드를 만든다&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;설정하는 시간 &amp;lt;&amp;lt;&amp;lt; 이후의 생산성&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;상수로 관리해야하는 것들 &lt;code class=&quot;language-text&quot;&gt;필수&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;BASE_URL&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://jsonplaceholder.fakeapi.com/&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;ERROR_MESSAGE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;token string&quot;&gt;&apos;Failed to fetch data, please check your API or internet connection&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;DEFAULT_PAGE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;API url, 요소 개수, 에러메세지, 시작하는 페이지&lt;/li&gt;
&lt;li&gt;상수 쓸 때 항상 대문자, _&lt;/li&gt;
&lt;li&gt;BASE_URL은 정말 딱 기본주소까지만!&lt;/li&gt;
&lt;li&gt;컴포넌트 안에 넣으면 안됨!
(죽어도 이 컴포넌트에서만 쓰는 상수, 함수는 import 라인과 컴포넌트 함수 사이에 해도 거기까지는 OK)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;절대경로 설정&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;import 할 때 절대경로, alias 설정하기 &lt;code class=&quot;language-text&quot;&gt;../../&lt;/code&gt; 이런 코드가 줄어듦&lt;/li&gt;
&lt;li&gt;import도 순서 맞춰서 보기좋게&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;폴리필과-크로스-브라우징&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%8F%B4%EB%A6%AC%ED%95%84%EA%B3%BC-%ED%81%AC%EB%A1%9C%EC%8A%A4-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A7%95&quot; aria-label=&quot;폴리필과 크로스 브라우징 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;폴리필과 크로스 브라우징&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://caniuse.com/&quot;&gt;https://caniuse.com/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ex) Intersection Observer API를 사용하면 ie에서는 지원 안됨 (MDN문서 확인)&lt;/li&gt;
&lt;li&gt;ie는 버릴 수가 없다 😥 (크롬 많이 쓰는 것 같아도 ie 접속자가 아직 많다!)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;react를-왜-사용하나요-대답하기&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#react%EB%A5%BC-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%82%98%EC%9A%94-%EB%8C%80%EB%8B%B5%ED%95%98%EA%B8%B0&quot; aria-label=&quot;react를 왜 사용하나요 대답하기 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React를 왜 사용하나요? 대답하기&lt;/h3&gt;
&lt;h3 id=&quot;utils로-관리해야하는-함수&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#utils%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98&quot; aria-label=&quot;utils로 관리해야하는 함수 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;utils로 관리해야하는 함수&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;한번만 쓰는게 아니라 다른 곳에서도 어러번 사용되는 함수&lt;/li&gt;
&lt;li&gt;custom hook도 utils에 포함될 수 있음&lt;/li&gt;
&lt;li&gt;2개 이상의 컴포넌트에 사용되는 함수다 → utils 함수로 분리하는 게 좋음&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;frontend에서의-unit-test&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#frontend%EC%97%90%EC%84%9C%EC%9D%98-unit-test&quot; aria-label=&quot;frontend에서의 unit test permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frontend에서의 unit test&lt;/h3&gt;
&lt;h3 id=&quot;json&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#json&quot; aria-label=&quot;json permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h3&gt;
&lt;h3 id=&quot;mock-data&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mock-data&quot; aria-label=&quot;mock data permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mock data&lt;/h3&gt;
&lt;p&gt;이 많은 주제를 2시간 안에 다루다니! 정말이지 너무 알차서 눈물이 난다😂
프론트엔드 개발자라면 필수적으로 무.조.건 알아야하는 것들인데 더더 공부하고 더더 확실히 알아두겠다! 😎&lt;/p&gt;</content:encoded></item><item><title><![CDATA[프리온보딩에 온보딩 하기]]></title><description><![CDATA[개발자로 본격 취준을 준비하던 중 나에게 꼭 맞는 프로그램을 발견했다! 
원티드 x 루트임팩트 x wecode가 함께 진행하는 프리온보딩 코스 🚀 
선착순 7…]]></description><link>https://irisdew.github.io/pre-onboarding/프리온보딩에-온보딩-하기/</link><guid isPermaLink="false">https://irisdew.github.io/pre-onboarding/프리온보딩에-온보딩-하기/</guid><pubDate>Mon, 26 Jul 2021 22:07:00 GMT</pubDate><content:encoded>&lt;p&gt;개발자로 본격 취준을 준비하던 중 나에게 꼭 맞는 프로그램을 발견했다! &lt;br/&gt;
원티드 x 루트임팩트 x wecode가 함께 진행하는 &lt;strong&gt;프리온보딩 코스&lt;/strong&gt; 🚀 &lt;br/&gt;
선착순 70명 마감이라는 말에 부랴부랴 준비해야 할 것들을 갖추고 지원했다. &lt;br/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;관련 서류 + 원티드 이력서 + 참가기업 지원을 위한 숏에세이 + 과제 구현&lt;/code&gt; 이 필요했다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/76525368/127342657-f2f5e287-ee9d-479e-a36c-534215cd3e17.gif&quot; alt=&quot;Animation&quot;&gt;
&lt;a href=&quot;https://github.com/irisdew/wanted-GNB-clone&quot;&gt;과제&lt;/a&gt;는 wanted global-navigation-bar를 구현하는 것이었다.
&lt;a href=&quot;https://www.notion.so/_-84e9dfc8a1c94eb29df3e98c99669d09&quot;&gt;notion&lt;/a&gt;에 간단한 설명을 함께 적어 제출했다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;간단한 메뉴 구현이지만 라이브러리 없이! 구현하려니 생각보다 까다로운 면이 있었다.&lt;/li&gt;
&lt;li&gt;사이트랑 똑-같-이 구현해야 해서 css를 오랜만에 많이 만졌다.&lt;/li&gt;
&lt;li&gt;sub-menu가 hover했을 때 켜지고, mouse가 머무르는 동안에도 켜져있어야 할 것 같아서
sub-menu를 열고 닫는 이벤트를 어떻게 할지 고민했다.&lt;/li&gt;
&lt;li&gt;main-manu 선택 시, 파란색 하단바가 표시되는 부분은 일단 css의 ::after 속성으로 만들었는데,
선택이 되었다는 상태를 react스럽게 관리하고 싶었다. 그래서 useState에 배열로 true, false 값을 넣어서 사용했는데 약간 주먹구구식 구현이 아니었나 싶어 민망하다.
다른분들은 어떻게 구현하셨는지 알고 싶다!&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;
&lt;hr&gt;
&lt;h1 id=&quot;orientation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#orientation&quot; aria-label=&quot;orientation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Orientation&lt;/h1&gt;
&lt;h3 id=&quot;기본적으로-지켜야-할-것들&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%A7%80%EC%BC%9C%EC%95%BC-%ED%95%A0-%EA%B2%83%EB%93%A4&quot; aria-label=&quot;기본적으로 지켜야 할 것들 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;기본적으로 지켜야 할 것들&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;gitignore 관리 🌝&lt;/li&gt;
&lt;li&gt;depth 한번 더 들어 간 폴더구조 🌝&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;README 관리 🌗&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;README는 설치와 실행 방법만 적어두어서 약간 세모상태였던 것 같다.&lt;/li&gt;
&lt;li&gt;프론트의 경우 배포를 하거나 기능별 영상, gif를 올려주는 것이 사실은 필수!&lt;/li&gt;
&lt;li&gt;코드 설명, 회고, 자세한 내용은 블로그에 작성하여 첨부하면 좋다고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;하면-good-이것도-거의-기본&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%95%98%EB%A9%B4-good-%EC%9D%B4%EA%B2%83%EB%8F%84-%EA%B1%B0%EC%9D%98-%EA%B8%B0%EB%B3%B8&quot; aria-label=&quot;하면 good 이것도 거의 기본 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;하면 good, 이것도 거의 기본&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;commit 관리&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;과제전형이나 나혼자 프로젝트를 할 때는 늘 &lt;a href=&quot;https://gitmoji.dev/&quot;&gt;gitmoji&lt;/a&gt;를 사용하곤 한다.
예쁘고 의도가 명확해져서 소소한 자기만족…&lt;/li&gt;
&lt;li&gt;그렇지만, gitmoji가 보편적으로 많이 사용되는 방식은 아닌 것 같으므로,
실제 현업에서 사용하는 commit message 방식을 눈여겨보고 앞으로 사용해야겠다.
&lt;img src=&quot;https://user-images.githubusercontent.com/76525368/127353879-dd11bcdc-7e5c-4f19-8c67-f20f1244538a.png&quot; alt=&quot;image&quot;&gt;&lt;/li&gt;
&lt;li&gt;commit을 잘게 쪼개서 하는걸 좋아하긴하는데
불필요한 commit을 남발하지 않도록 주의해야겠다고 느꼈다.&lt;/li&gt;
&lt;li&gt;진행과정이 잘 드러나는 선에서! 똑똑하게 개발하는 것처럼 보이도록 전략적으로 commit하기 (머리로는 아는데 손으로는 과연…!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;코드 컨벤션 관리&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;나 혼자서는 잘할 자신이 없어서 eslint를 쓴다.
혼자 작업할 때는 따로 설치하지 않고 vscode extension을 사용하는데
과제전형을 제출할 때는 설정하는 것도 좋을 것 같다!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;메일-작성도-똑똑이처럼&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%A9%94%EC%9D%BC-%EC%9E%91%EC%84%B1%EB%8F%84-%EB%98%91%EB%98%91%EC%9D%B4%EC%B2%98%EB%9F%BC&quot; aria-label=&quot;메일 작성도 똑똑이처럼 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;메일 작성도 똑똑이처럼!&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;좋은 기회를 주셔서 감사하다고 꼭 표시하기!
(이건 내가 간과했던 부분이다…그냥 최소한의 예의를 갖춰서 제출만 했었던 과거의 나)&lt;/li&gt;
&lt;li&gt;시간이 남으면 추가구현하고 메일에서 어필을 해도 좋다&lt;/li&gt;
&lt;li&gt;메일도 평가/어필의 도구가 될 수 있다는 걸 이번에 새로 깨달았다!&lt;/li&gt;
&lt;li&gt;“회사는 과제로 일머리를 유추한다” 명언처럼 마음에 새기기!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;회사-지원할-때-이력서-자소서&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%9A%8C%EC%82%AC-%EC%A7%80%EC%9B%90%ED%95%A0-%EB%95%8C-%EC%9D%B4%EB%A0%A5%EC%84%9C-%EC%9E%90%EC%86%8C%EC%84%9C&quot; aria-label=&quot;회사 지원할 때 이력서 자소서 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;회사 지원할 때 이력서, 자소서&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;개발자는 자소서 안써도 된다고 생각했던 과거의 내 생각은 오산!&lt;/li&gt;
&lt;li&gt;연습용 지원이 아니고 꼭 가고 싶은 회사라면 회사에 대해 공부한 후 essay는 필수!&lt;/li&gt;
&lt;li&gt;사진 어차피 잘 안보이니 사진을 넣는 것이 좋다. 가성비 좋은 이력서 꾸미기 도구 = 내 사진&lt;/li&gt;
&lt;li&gt;노션을 pdf화 하는거 절대 X (와우,,, 그동안 많이했는데)&lt;/li&gt;
&lt;li&gt;원티드 이력서, 로켓펀치 프로필, 링크드인 프로필 등등 각종 플랫폼을 이해하고 활용해서 나를 최대한 표현하자!&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;
&lt;br/&gt;</content:encoded></item><item><title><![CDATA[about]]></title><description><![CDATA[Malgeuniseul Yoon (Iris) Thank you for reading my resume. If you want to contact me, Please send me an email.]]></description><link>https://irisdew.github.io/resume-en/</link><guid isPermaLink="false">https://irisdew.github.io/resume-en/</guid><pubDate>Sun, 27 Jan 2019 16:21:13 GMT</pubDate><content:encoded>&lt;h1 id=&quot;malgeuniseul-yoon-iris&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#malgeuniseul-yoon-iris&quot; aria-label=&quot;malgeuniseul yoon iris permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Malgeuniseul Yoon (Iris)&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;p&gt;&lt;em&gt;Thank you for reading my resume. If you want to contact me, Please send me an email.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</content:encoded></item></channel></rss>
{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/이벤트-루프/","result":{"data":{"site":{"siteMetadata":{"title":"iris.dew","author":"irisdew","siteUrl":"https://irisdew.github.io","comment":{"disqusShortName":"","utterances":"irisdew/irisdew.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"91291aad-ca58-526e-b2c7-1013b343c6d9","excerpt":"자바스크립트 엔진 자바스크립트 코드를 해석하고 실행하는 인터프리터 ⚙ Webkit, V8… 자바스크립트 엔진은 크게  으로 구분된다 은 메모리 할당이 일어나는 부분\n(변수, 객체 등이 저장되는 일종의 창고) 은 함수가 호출되는 순서대로 쌓이는 스택 함수 실행 시 호출 스택에 해당 함수를 집어 넣음 함수 return…","html":"<h3 id=\"자바스크립트-엔진\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%97%94%EC%A7%84\" aria-label=\"자바스크립트 엔진 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 엔진</h3>\n<p>자바스크립트 코드를 해석하고 실행하는 인터프리터</p>\n<blockquote>\n<p>⚙ Webkit, V8…</p>\n</blockquote>\n<p>자바스크립트 엔진은 크게 <code class=\"language-text\">힙 + 호출스택 (Call Stack)</code> 으로 구분된다</p>\n<ul>\n<li><code class=\"language-text\">힙 Heap</code>은 메모리 할당이 일어나는 부분\n(변수, 객체 등이 저장되는 일종의 창고)</li>\n<li>\n<p><code class=\"language-text\">호출 스택 Call Stack</code>은 함수가 <strong>호출되는 순서대로 쌓이는 스택</strong></p>\n<ul>\n<li>함수 실행 시 호출 스택에 해당 함수를 집어 넣음</li>\n<li>함수 return 시(함수의 실행이 끝나면) 호출 스택의 맨 위에 있는 해당 함수를 끄집어냄</li>\n<li>호출 스택이 빈다 = 실행할 함수가 남아있지 않다</li>\n<li>\n<p>⚠ 사실 정확히 말하면 호출 스택에 쌓이는 건 함수가 아니라 <strong>함수의 실행 컨텍스트</strong>가 쌓이는 것! </p>\n<blockquote>\n<p><strong>함수의 실행 컨텍스트(Execution Context)</strong>\n자바스크립트 엔진이 함수를 실행시키기 위해 가지고 있어야하는 여러가지 정보들\n<em>(변수나 함수의 선언, 스코프, this … 같은 정보들을 물리적인 객체 형태로 보관하고 있다)</em></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>스크립트가 <strong>시작</strong>하면 <strong>전역 문맥(Global Context)</strong>이 호출스택에 추가된다\n스크립트가 끝날 때 전역 문맥이 호출스택에서 사라지면서 끝!</li>\n</ul>\n<br />\n<h3 id=\"자바스크립트는-single-thread-언어다\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%8A%94-single-thread-%EC%96%B8%EC%96%B4%EB%8B%A4\" aria-label=\"자바스크립트는 single thread 언어다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트는 Single Thread 언어다</h3>\n<p><em>그래서 자바스크립트 엔진은…</em></p>\n<p>= 동시에 하나의 일만 처리할 수 있다\n= 호출 스택을 하나만 사용한다</p>\n<blockquote>\n<p>👀 그럼 비동기 처리나 동시성에 대한 처리는 어디서 어떻게 하는 걸까?</p>\n</blockquote>\n <br />\n<h3 id=\"브라우저의-구조\" style=\"position:relative;\"><a href=\"#%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EC%9D%98-%EA%B5%AC%EC%A1%B0\" aria-label=\"브라우저의 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>브라우저의 구조</h3>\n<p><strong>브라우저</strong>는 자바스크립트 엔진 말고도\n<code class=\"language-text\">Web API, 이벤트루프, 콜백, 큐 ...</code> 같은 것들을 가지고 있다</p>\n<blockquote>\n<p>💡동시성을 지원하기 위해 자바스크립트 엔진을 구동하는 환경인 <strong>브라우저</strong>가 <strong>비동기 처리</strong>를 담당한다</p>\n</blockquote>\n<p><img src=\"https://images.velog.io/images/irisdew/post/d0cd3838-845e-4c3a-aef6-8fe7815091a6/image.png\"></p>\n<ul>\n<li><code class=\"language-text\">setTimeout, DOM 매서드, HTTP 요청</code> 같은 것들은 모두 자바스크립트 엔진 밖에 있는 <code class=\"language-text\">Web API</code>에서 제공하는 메서드</li>\n<li><code class=\"language-text\">Web API</code> 매서드들은 모두 <strong>비동기</strong> 메서드들이기 때문에\n작동을 마치고 <code class=\"language-text\">콜백함수</code>를 <code class=\"language-text\">콜백 큐</code>에 집어 넣음</li>\n<li><code class=\"language-text\">콜백 큐 Callback Queue</code>에 비동기 처리가 끝난 후 실행 되어야 할 <code class=\"language-text\">콜백함수</code>들이 차례로 할당되고, 실행을 대기하게 됨</li>\n</ul>\n<br />\n<h3 id=\"이벤트-루프가-하는-일\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EB%A3%A8%ED%94%84%EA%B0%80-%ED%95%98%EB%8A%94-%EC%9D%BC\" aria-label=\"이벤트 루프가 하는 일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 루프가 하는 일</h3>\n<ol>\n<li><code class=\"language-text\">호출 스택 Call Stack</code>과 <code class=\"language-text\">콜백 큐 Callback Queue</code>를 계속 주시하고 있다가</li>\n<li><code class=\"language-text\">호출 스택</code>이 <strong>비어있으면</strong>, <code class=\"language-text\">콜백 큐</code>에 먼저 들어온 순서대로 <code class=\"language-text\">콜백 큐</code>에 있는 <code class=\"language-text\">콜백 함수</code>들을 <code class=\"language-text\">호출 스택</code>으로 집어 넣는다. </li>\n<li><code class=\"language-text\">호출 스택</code>에서 <code class=\"language-text\">콜백 함수</code>가 실행되고 사라진다. </li>\n</ol>\n<blockquote>\n<p>✨자바스크립트의 <strong>동시성</strong>을 지원하는 것이 바로 <strong>이벤트 루프</strong>라고 할 수 있다!</p>\n</blockquote>\n<hr />\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h3>\n<ul>\n<li>우아한테코톡 - 이벤트 루프 <a href=\"https://youtu.be/wcxWlyps4Vg\">https://youtu.be/wcxWlyps4Vg</a></li>\n<li><a href=\"https://towardsdev.com/event-loop-in-javascript-672c07618dc9?gi=b276e835f287\">https://towardsdev.com/event-loop-in-javascript-672c07618dc9?gi=b276e835f287</a></li>\n<li><a href=\"https://poiemaweb.com/js-event\">https://poiemaweb.com/js-event</a></li>\n</ul>","frontmatter":{"title":"이벤트 루프","date":"August 13, 2021"}}},"pageContext":{"slug":"/development/이벤트-루프/","previous":{"fields":{"slug":"/development/브라우저-동작-원리/"},"frontmatter":{"title":"브라우저 동작 원리"}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}